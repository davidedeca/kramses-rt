#
###########################################################################
# If you have problems with this makefile, contact Romain.Teyssier@gmail.com
#############################################################################
# Compilation time parameters
NVECTOR = 16
NDIM = 3
NPRE = 8
NENER = 0
NGROUPS = 10
NIONS = 9
NVAR  = ${NDIM}
NVAR := $(shell expr $(NVAR) + 2)
# for metals
#NVAR := $(shell expr $(NVAR) + 1)
# for refinement
#NVAR := $(seell expr $(NVAR) + 1)
NVAR := $(shell expr $(NVAR) + $(NENER))
NVAR := $(shell expr $(NVAR) + $(NIONS))
SOLVER = hydro
PATCH := $(PATCH):../patch/patch_kramsesGMC/krome
PATCH := $(PATCH):../patch/patch_kramsesGMC/hydro
PATCH := $(PATCH):../patch/patch_kramsesGMC/amr
PATCH := $(PATCH):../patch/patch_kramsesGMC/pm
EXEC = kramsesGMC
ATON_FLAGS = #-DATON  # Uncomment to enable ATON.
#############################################################################
GITBRANCH = $(shell git rev-parse --abbrev-ref HEAD)
GITHASH = $(shell git log --pretty=format:'%H' -n 1)
GITREPO = $(shell git config --get remote.origin.url)
BUILDDATE = $(shell date +"%D-%T")
DEFINES = -DNVECTOR=$(NVECTOR) -DNDIM=$(NDIM) -DNPRE=$(NPRE) -DNIONS=$(NIONS) -DNGROUPS=$(NGROUPS) -DNVAR=$(NVAR) \
          -DNENER=$(NENER) -DSOLVER$(SOLVER) $(ATON_FLAGS) -DRT
#############################################################################
KROMESTUFF = -Dkrome_on
#
#############################################################################
# Fortran compiler options and directives

# --- No MPI, gfortran -------------------------------
#F90 = gfortran -O3 -frecord-marker=4 -fbacktrace -ffree-line-length-none -g
#FFLAGS = -x f95-cpp-input $(DEFINES) -DWITHOUTMPI

# --- No MPI, tau ----------------------------------
#F90 = tau_f90.sh -optKeepFiles -optPreProcess -optCPPOpts=$(DEFINES) -DWITHOUTMPI

# --- No MPI, pgf90 ----------------------------------
#F90 = pgf90
#FFLAGS = -Mpreprocess $(DEFINES) -DWITHOUTMPI

# --- No MPI, xlf ------------------------------------
#F90 = xlf
#FFLAGS = -WF,-DNDIM=$(NDIM),-DNPRE=$(NPRE),-DNVAR=$(NVAR),-DSOLVER$(SOLVER),-DWITHOUTMPI -qfree=f90 -qsuffix=f=f90 -qsuffix=cpp=f90

# --- No MPI, f90 ------------------------------------
#F90 = f90
#FFLAGS = -cpp $(DEFINES) -DWITHOUTMPI

# --- No MPI, ifort ----------------------------------
#F90 = ifort
#FFLAGS = -cpp $(DEFINES) -DWITHOUTMPI

# --- MPI, gfortran syntax ------------------------------
#F90 = mpif90 -frecord-marker=4 -O3 -ffree-line-length-none
#F90 += -g -fbacktrace -ffpe-trap=zero,overflow,invalid
#FFLAGS = -x f95-cpp-input $(DEFINES)
#FFLAGS += $(KROMESTUFF)
#FFLAGS77 = -x f77-cpp-input $(DEFINES)
#nowarn = -w

# --- MPI, pgf90 syntax ------------------------------
#F90 = mpif90 -O3
#FFLAGS = -Mpreprocess $(DEFINES)

# --- MPI, ifort syntax ------------------------------
F90  = mpiifort 
F90 += -O4 -ipo -cpp -xHOST -nowarn 
#F90 += -traceback
##F90 += -ffpe-trap=zero,overflow,invalid
#F90 += -check all
FFLAGS = 
FFLAGS += -fpp 
FFLAGS += $(DEFINES)
FFLAGS += $(KROMESTUFF)

#F90 = mpif90 
#F90 += -traceback -g
#F90 += -fpe0 
#F90 += -check all
# "standard"
#FFLAGS = -O3 -xavx2 -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS2 = -O0 -xavx2 -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS3 = -O3 -cpp $(DEFINES) $(KROMESTUFF)

# "test production"
#FFLAGS = -O3 -xavx2 -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS2 = -O0 -xavx2 -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS3 = -O3 -cpp $(DEFINES) $(KROMESTUFF)
FFLAGS77 = 
#FFLAGS77 = -O3 $(DEFINES) $(KROMESTUFF)

# debug test
#
#TRAPS = -fpe0 -ftrapuv -fpe-all=0 -check bounds 
#FFLAGS = -O0 $(TRAPS) -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS2 = -O0 $(TRAPS) -cpp $(DEFINES) $(KROMESTUFF)
#FFLAGS3 = -O0 $(TRAPS) -cpp $(DEFINES) $(KROMESTUFF)
FFLAGS77 = -O0 $(TRAPS) -cpp $(DEFINES) $(KROMESTUFF)

# --- MPI, ifort syntax, additional checks -----------
#F90 = mpiifort #f90
#FFLAGS = -O0 -g -traceback -fpe0 -ftrapuv -cpp $(DEFINES) -DNOSYSTEM
#FFLAGS += $(KROMESTUFF)
#############################################################################
PATCH := ../patch/patch_kramsesGMC/rt:${PATCH}

MOD = mod
#############################################################################
# MPI librairies
LIBMPI = 
#LIBMPI = -lfmpi -lmpi -lelan

# --- CUDA libraries, for Titane ---
LIBCUDA = -L/opt/cuda/lib  -lm -lcuda -lcudart

LIBS = $(LIBMPI)
#############################################################################
# Sources directories are searched in this exact order
VPATH = $(PATCH):../$(SOLVER):../aton:../rt:../hydro:../pm:../poisson:../amr:../io
#############################################################################

# krome objects
KROMEOBJ = opkda1.o opkda2.o opkdmain.o krome_user_commons.o krome_all.o

# All objects (I removed write_patch.o after write_makefile.o)
MODOBJ = $(KROMEOBJ) amr_parameters.o amr_commons.o random.o pm_parameters.o pm_commons.o dump_utils.o poisson_parameters.o \
         poisson_commons.o hydro_parameters.o hydro_commons.o cooling_module.o bisection.o sparse_mat.o \
         clfind_commons.o gadgetreadfile.o write_makefile.o write_gitinfo.o rt_parameters.o rt_hydro_commons.o coolrates_module.o \
         rt_spectra.o rt_cooling_module.o rt_flux_module.o

AMROBJ = read_params.o init_amr.o init_time.o init_refine.o adaptive_loop.o amr_step.o update_time.o \
         output_amr.o flag_utils.o physical_boundaries.o virtual_boundaries.o refine_utils.o nbors_utils.o \
         hilbert.o load_balance.o title.o sort.o cooling_fine.o units.o light_cone.o movie.o
# Particle-Mesh objects
PMOBJ = init_part.o output_part.o rho_fine.o synchro_fine.o move_fine.o newdt_fine.o particle_tree.o \
        add_list.o remove_list.o star_formation.o sink_particle.o feedback.o clump_finder.o clump_merger.o \
        flag_formation_sites.o init_sink.o output_sink.o
# Poisson solver objects
POISSONOBJ = init_poisson.o phi_fine_cg.o interpol_phi.o force_fine.o multigrid_coarse.o multigrid_fine_commons.o \
             multigrid_fine_fine.o multigrid_fine_coarse.o gravana.o boundary_potential.o rho_ana.o output_poisson.o
# Hydro objects
HYDROOBJ = init_hydro.o init_flow_fine.o write_screen.o output_hydro.o courant_fine.o godunov_fine.o \
           uplmde.o umuscl.o interpol_hydro.o godunov_utils.o condinit.o hydro_flag.o hydro_boundary.o \
           boundana.o read_hydro_params.o synchro_hydro_fine.o turbulence.o
# RT objects
RTOBJ = rt_init_hydro.o rt_init_xion.o rt_init.o rt_init_flow_fine.o rt_output_hydro.o rt_godunov_fine.o \
        rt_interpol_hydro.o rt_godunov_utils.o rt_condinit.o rt_hydro_flag.o rt_hydro_boundary.o rt_boundana.o \
        rt_read_hydro_params.o rt_units.o

# All objects
AMRLIB = $(AMROBJ) $(HYDROOBJ) $(PMOBJ) $(POISSONOBJ) $(RTOBJ)
# ATON objects
ATON_MODOBJ = timing.o radiation_commons.o rad_step.o
ATON_OBJ = observe.o init_radiation.o rad_init.o rad_boundary.o rad_stars.o rad_backup.o ../aton/atonlib/libaton.a

#############################################################################

init_hydro.o: FFLAGS = $(FFLAGS2)  

ramses.o: FFLAGS = $(FFLAGS3)

ramses:	$(MODOBJ) $(AMRLIB) ramses.o
	$(F90) $(MODOBJ) $(AMRLIB) ramses.o -o $(EXEC)$(NDIM)d $(LIBS)
	rm write_makefile.f90
#       rm write_patch.f90

ramses_aton: $(MODOBJ) $(ATON_MODOBJ) $(AMRLIB) $(ATON_OBJ) ramses.o
	$(F90) $(MODOBJ) $(ATON_MODOBJ) $(AMRLIB) $(ATON_OBJ) ramses.o -o $(EXEC)$(NDIM)d $(LIBS) $(LIBCUDA)
	rm write_makefile.f90
#	rm write_patch.f90

#############################################################################

write_gitinfo.o: FORCE
	$(F90) $(FFLAGS) -DPATCH=\'$(PATCH)\' -DGITBRANCH=\'$(GITBRANCH)\' -DGITHASH=\'"$(GITHASH)"\' \
-DGITREPO=\'$(GITREPO)\' -DBUILDDATE=\'"$(BUILDDATE)"\' -c ../amr/write_gitinfo.f90 -o $@
write_makefile.o: FORCE
	../utils/scripts/cr_write_makefile.sh $(MAKEFILE_LIST)
	$(F90) $(FFLAGS) -c write_makefile.f90 -o $@
#write_patch.o: FORCE
#	../utils/scripts/cr_write_patch.sh $(PATCH)
#	$(F90) $(FFLAGS) -c write_patch.f90 -o $@


%.o:%.f90
	$(F90) $(FFLAGS) -c $^ -o $@
%.o:%.f
	$(F90) $(FFLAGS77) $(nowarn) -c $^ -o $@

FORCE:
#############################################################################
clean :
	rm *.o *.$(MOD)
#############################################################################
